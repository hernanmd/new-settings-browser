Extension { #name : 'SettingDeclaration' }

{ #category : '*NewSettingsBrowser' }
SettingDeclaration >> asSettingPresenter [
	"Answer an appropriate <SpPresenter> container for the receiver's value"

	^ self precondition value 
		ifTrue: [ self default asSettingPresenter: self ]
		ifFalse: [ SpNullPresenter new ]
]

{ #category : '*NewSettingsBrowser' }
SettingDeclaration >> getColor [

	(SpPresenter new instantiate: SpColorPickerWindow on: self)
		whenColorChangedDo: [ : c | 
			| changedAspect |
			"First we need to get the setter selector, then apply it"
			"Some settings are built 'customized' configuring its setter in a different way than using #targetSelector (see #customSettingsOn:)"
			self targetSelector 
				ifNil: [ 
					self realTarget perform: self name asMutator with: c.
					changedAspect := self realTarget ]
				ifNotNil: [ 
					changedAspect := self realTarget perform: self targetSelector.
					changedAspect perform: self setSelector with: c. ].

			self announcer announce: (StSettingsChanged new aspect: changedAspect value: c) ];
		open
]
